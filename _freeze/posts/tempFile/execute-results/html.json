{
  "hash": "532eaf1a50a49e28fc43086ce7c3a148",
  "result": {
    "markdown": "---\ntitle: \"Blog Post Template\"\nauthor: \"Your Name\"\ndesription: \"Something to describe what I did\"\ndate: \"08/02/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - hw1\n  - challenge1\n  - my name\n  - dataset\n  - ggplot2\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(treemap)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'treemap' was built under R version 4.2.2\n```\n:::\n\n```{.r .cell-code}\nlibrary(RColorBrewer)\nlibrary(ggplot2)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ tibble  3.1.8     ✔ dplyr   1.0.9\n✔ tidyr   1.2.1     ✔ stringr 1.4.1\n✔ readr   2.1.3     ✔ forcats 0.5.2\n✔ purrr   0.3.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndataset<- read_csv(\"100FamousPeople_new.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\nRows: 100 Columns: 10\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(8): people_names, peoples_title, content, from, to, profession, country... dbl\n(2): ...1, ...2\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n• `...1` -> `...2`\n```\n:::\n:::\n\n\n\n## Piechart for countries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmyPalette <- brewer.pal(5, \"Set2\")\npie(table(dataset$country), border=\"white\", col=myPalette,cex=0.9)\n```\n\n::: {.cell-output-display}\n![](tempFile_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlibrary(lessR)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'lessR' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nlessR 4.2.4                         feedback: gerbing@pdx.edu \n--------------------------------------------------------------\n> d <- Read(\"\")   Read text, Excel, SPSS, SAS, or R data file\n  d is default data frame, data= in analysis routines optional\n\nLearn about reading, writing, and manipulating data, graphics,\ntesting means and proportions, regression, factor analysis,\ncustomization, and descriptive statistics from pivot tables.\n  Enter:  browseVignettes(\"lessR\")\n\nView changes in this and recent versions of lessR.\n  Enter: news(package=\"lessR\")\n\n**New Feature**: Interactive analysis of your data\n  Enter: interact()\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'lessR'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:dplyr':\n\n    recode, rename\n```\n:::\n\n```{.r .cell-code}\ncountry_data <- data.frame(country = dataset$country)\n\nPieChart(\n  country,\n  hole = 0,\n  values = \"input\",\n  data = country_data,\n  main = \"\"\n)\n```\n\n::: {.cell-output-display}\n![](tempFile_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n>>> suggestions\npiechart(country, hole=0)  # traditional pie chart\npiechart(country, values=\"%\")  # display %'s on the chart\npiechart(country)  # bar chart\nplot(country)  # bubble plot\nplot(country, values=\"count\")  # lollipop plot \n\n--- country --- \n\n      country Count   Prop \n--------------------------- \n      america    35   0.350 \n      british    19   0.190 \n       europe    13   0.130 \n       france     3   0.030 \n      germany     3   0.030 \n        india     3   0.030 \n       others    13   0.130 \n     pakistan     2   0.020 \n       russia     5   0.050 \nsouth_america     4   0.040 \n--------------------------- \n        Total   100   1.000 \n\nChi-squared test of null hypothesis of equal probabilities \n  Chisq = 99.600, df = 9, p-value = 0.000 \n```\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n## Treemap for professions\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create data\ntree_map_data <- data.frame(table(dataset$profession))\n \ncolnames(tree_map_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Var1\" \"Freq\"\n```\n:::\n\n```{.r .cell-code}\n# treemap\ntreemap(tree_map_data,\n            index=\"Var1\",\n            vSize=\"Freq\",\n            type=\"index\",\n        border.col=c(\"black\",\"white\"),\n        border.lwds=c(2,2),\n        title=\"Profession distribution\",\n        palette = \"Set2\"\n            )\n```\n\n::: {.cell-output-display}\n![](tempFile_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## Bar graphs on age ranges\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbefore_ww1 <- dataset %>% select(from) %>% filter(from < 1913) %>% nrow()\n\nbetween_wars <- dataset %>% select(from) %>% filter(from > 1913 & from < 1939) %>% nrow()\nafter_ww2 <- dataset %>% select(from) %>% filter(from > 1945) %>% nrow()\n\n\n# Create data\ndata <- data.frame(\n  name=c(\"Before WW1\",\"Between Wars\",\"After WW2\") ,  \n  value=c(before_ww1,between_wars,after_ww2)\n  )\n\n# Barplot\nggplot(data, aes(x=name, y=value)) + \n  geom_bar(stat = \"identity\")\n```\n\n::: {.cell-output-display}\n![](tempFile_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# new graph =======================================\n\nera_df <- data.frame(\n  era=c(\"Before WW1(< 1914)\",\"Between Wars\",\"After WW2(>1945)\") ,  \n  value=c(\"41\",\"23\",\"29\")\n  )\n\n\nggplot(era_df, aes(x = era, y = value, fill = era)) +  \n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = value), vjust = 0) +\n  xlab(\"Era --->\")+\n  ylab(\"Number of people --->\")\n```\n\n::: {.cell-output-display}\n![](tempFile_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n:::\n\n\n## Gender Distribution\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngender_df <- data.frame(\n  gender=c(\"Female\",\"Male\") ,  \n  value=c(\"27\",\"73\")\n  )\n\n\nggplot(gender_df, aes(x = gender, y = value, fill = gender)) +  \n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = value), vjust = 0) +\n  xlab(\"Gender\")+\n  ylab(\"Count\")\n```\n\n::: {.cell-output-display}\n![](tempFile_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- dataset %>% select(from, people_names, profession) %>% filter(from<1914)\ntable(x$profession)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n     academia        artist   businessman entertainment  humanitarian \n            7             6             2             3             2 \n       others    politician       royalty        sports \n            5            13             2             3 \n```\n:::\n:::\n\n\n\n# Wordclouds!!!\n\nLets try to visualise everyone's occupation using word clouds. Here I am following these steps to generate a word clouds.\n\n-   tokenizing\n\n-   stop word removal - using *stopwords-iso* list ( consists of 1298 stopwords)\n\n-   corpus creation\n\n-   removing numbers, punctuation, white spaces.\n\n    -   converting all text to lower case to maintain uniformity\n\n-   Creating Document-Term Matrix\n\n-   Finally generating word clouds!!!\n\n> **Important**. I faced issues generating word clouds, particularly at the matrix creation step. I've seen a lot of memory allocation issues, which I think is due to the RStudio update. Hence I am attaching the [screenshots]{.underline} of the word cloud generated in one of the successful attempts.\n>\n> How I solved it temporarily?\n>\n> -   either using gc() command which frees up unused memory space.\n>\n> -   deleting the .rdata file from my project.\n>\n> -   waiting a long time for my RAM to free up before I run another code block :(\n\n### Word Cloud on Occupations\n\nLooks like it is evident that 1/3rd of people in the list are from the USA, and Britain and most of them could be leaders, actresses, author, musician etc. It would be interesting to see the correlation of the word and the people associated with it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# df2 <- data.frame(word = names(words_occupation),freq=words_occupation)\n# \n# wordcloud2(data=tree_map_data, size = 0.4)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# for_occupation <-  dataset %>%\n#   unnest_tokens(word, peoples_title, token = \"words\", strip_punct = TRUE) %>% \n#   filter(!(word %in% stopwords(source = \"stopwords-iso\"))) \n# \n# \n# # corpus created\n# create_corpus_occupation <- Corpus(VectorSource(for_occupation))\n# \n# \n# # cleaning data using tm library\n# create_corpus_occupation <- create_corpus_occupation %>%\n#   tm_map(removeNumbers) %>%\n#   tm_map(removePunctuation) %>%\n#   tm_map(stripWhitespace)\n# create_corpus_occupation <- tm_map(create_corpus_occupation, content_transformer(tolower))\n# create_corpus_occupation <- tm_map(create_corpus_occupation, removeWords, stopwords(\"english\"))\n# \n# # creating document term matrix\n# \n# dtm_occupation <- TermDocumentMatrix(create_corpus_occupation) \n# matrix_occupation <- as.matrix(dtm_occupation) \n# words_occupation <- sort(rowSums(matrix_occupation),decreasing=TRUE) \n# df2 <- data.frame(word = names(words_occupation),freq=words_occupation)\n# \n# wordcloud2(data=df2, size = 0.8)\n```\n:::\n\n\n### \n\n\n::: {.cell}\n\n:::\n\n\n### Word cloud on ALL biographies\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# bio <- dataset2 %>% \n#   unnest_tokens(word, content, token = \"words\", strip_punct = TRUE) %>% \n#   filter(!(word %in% stopwords(source = \"stopwords-iso\"))) \n# \n# \n# # tokenize_words(dataset$content)\n# \n# # %>% filter(!(word %in% stopwords(source = \"stopwords-iso\"))) \n# # \n# bio_vec <- bio$word\n# create_corpus <- Corpus(VectorSource(bio_vec))\n# \n# #cleaning data using tm library\n# create_corpus <- create_corpus %>%\n#  tm_map(removeNumbers) %>%\n#  tm_map(removePunctuation) %>%\n#  tm_map(stripWhitespace)\n# create_corpus <- tm_map(create_corpus, content_transformer(tolower))\n# create_corpus <- tm_map(create_corpus, removeWords, stopwords(\"english\"))\n# \n# \n# #creating document term matrix\n# \n# dtm <- TermDocumentMatrix(create_corpus)\n# matrix <- as.matrix(dtm)\n# words <- sort(rowSums(matrix),decreasing=TRUE)\n# df <- data.frame(word = names(words),freq=words)\n# #word cloud\n# wordcloud2(data=df, size = 0.7)\n```\n:::\n\n\nThe above word cloud provides really good insights about their biographies as a whole. It revolved mostly around war, people, government, politics and so on. Since this list is from the last century, the words like [*war*]{.underline} are highlighted. Since all of them are famous people, hence the word :).\n\nWords like president, american, political, army, peace, king might have some interesting correlations which I should further explore. Its good that [*women*]{.underline} are getting highlighted, which hints that a majority of this list contains women as well!\n\n# Future Analysis\n\nI am expecting to deep dive further into visualizing word count using graphs in my next post. And maybe in later posts, I want to do sentiment analysis.\n",
    "supporting": [
      "tempFile_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
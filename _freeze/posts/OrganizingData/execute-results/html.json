{
  "hash": "f7d5eb780d937b2a135a101a73037fc7",
  "result": {
    "markdown": "---\ntitle: \"Blog Post 1\"\nauthor: \"Adithya Parupudi\"\ndesription: \"Literature Review and Ideation\"\ndate: \"09/19/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - blogpost1\n  - AdithyaParupudi\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(quanteda)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in .recacheSubclasses(def@className, def, env): undefined subclass\n\"unpackedMatrix\" of class \"mMatrix\"; definition not updated\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in .recacheSubclasses(def@className, def, env): undefined subclass\n\"unpackedMatrix\" of class \"replValueSp\"; definition not updated\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nPackage version: 3.2.3\nUnicode version: 13.0\nICU version: 69.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nParallel computing: 8 of 8 threads used.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSee https://quanteda.io for tutorials and examples.\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages\n───────────────────────────────────────\ntidyverse 1.3.2 ──\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.8     ✔ dplyr   1.0.9\n✔ tidyr   1.2.1     ✔ stringr 1.4.1\n✔ readr   2.1.3     ✔ forcats 0.5.2\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(rvest)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'rvest'\n\nThe following object is masked from 'package:readr':\n\n    guess_encoding\n```\n:::\n\n```{.r .cell-code}\nlibrary(stringr)\nlibrary(tokenizers)\nlibrary(stopwords)\nlibrary(tidyverse)\nlibrary(tidytext)\nlibrary(ggplot2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndataset <- read.csv(\"./100FamousPeople.csv\")\ndataset <- tibble(dataset)\n```\n:::\n\n\n# him v/s her\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataset$content[1] %>% which(\"he\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in which(., \"he\"): argument to 'which' is not logical\n```\n:::\n\n```{.r .cell-code}\nabc <- dataset$content[1]\nwhich(abc == \"he\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ninteger(0)\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\namerica <- dataset$content %>% tolower() %>% str_detect(.,\"america\")\nlength(america[america=='TRUE'])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 68\n```\n:::\n:::\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}